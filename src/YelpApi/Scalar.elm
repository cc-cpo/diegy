-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module YelpApi.Scalar exposing (Codecs, Date(..), GenericScalar(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Date
    = Date String


type GenericScalar
    = GenericScalar String


defineCodecs :
    { codecDate : Codec valueDate
    , codecGenericScalar : Codec valueGenericScalar
    }
    -> Codecs valueDate valueGenericScalar
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDate valueGenericScalar
    ->
        { codecDate : Codec valueDate
        , codecGenericScalar : Codec valueGenericScalar
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDate valueGenericScalar
    = Codecs (RawCodecs valueDate valueGenericScalar)


type alias RawCodecs valueDate valueGenericScalar =
    { codecDate : Codec valueDate
    , codecGenericScalar : Codec valueGenericScalar
    }


defaultCodecs : RawCodecs Date GenericScalar
defaultCodecs =
    { codecDate =
        { encoder = \(Date raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Date
        }
    , codecGenericScalar =
        { encoder = \(GenericScalar raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map GenericScalar
        }
    }
